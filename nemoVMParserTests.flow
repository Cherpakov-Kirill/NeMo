import runtime;
import NeMoVirtualMachine/nemovm;

launchTest(filename : string){
    fileIn = "./tests/testsIn/" + filename;
    println("TestFile: " + fileIn);
    testCode = getFileContent(fileIn);
    println(testCode);
    switch (str2vmprogram(testCode) : Maybe<VMProgram>) {
        Some(prog):{
            println("str2vmprogram(fileContent : string)");
            println(prog);
            println("");
            println("vmprogram2str(VMNeMoProg : Program)");
            progStr = vmprogram2str(prog);
            println(progStr);
            println("");
            if(setFileContent("./tests/testsOut/" + "vmprogram2str_"+filename, progStr)){
                println("File was created");
            }
            else{
                println("File was not created");
            }
            println("");
            switch (str2vmprogram(progStr) : Maybe<VMProgram>) {
                Some(prog2):{
                    println("str2vmprogram(programFromNeMoVM2str)");
                    println(prog2);
                    println("");
                    if(prog == prog2) {
                        println("Seccessful: NeMoVM -> string -> NeMoVM");
                    }
                    else {
                        println("Error: NeMoVM -> string -> NeMoVM");
                    }
                }
                None():{
                    println("ParserError: NeMoVM -> string -> NeMoVM");     
                }
            }
        }
        None():{
            println("ParserError: " + filename + " -> NeMoVM");     
        }
    }
}

main(){
    launchTest("test1.vmnemo");
    //launchTest("test2.vmnemo");
    //launchTest("test3.vmnemo");
    //launchTest("test4.vmnemo");
    //launchTest("test5.vmnemo");
}