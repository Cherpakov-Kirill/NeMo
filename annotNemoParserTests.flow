import runtime;
import Verification/annot_nemo;
import fileUtils;

export {
    launchAnnotNemoTest(filename : string) -> AnnotProgram;
}

parseAnnotNemoProgram(code : string, testTitle : string) -> AnnotProgram{
    println("str2annotProgram " + testTitle);
    switch (str2annotProgram(code) : Maybe<AnnotProgram>) {
        Some(prog):{
            println("str2annotProgram(fileContent : string)");
            println(prog);
            println("");
            prog;
        }
        None():{
            println("ParserError: " + testTitle);
            AnnotProgram(Program([],Print(IntExpr(0))),FalseEF(), FalseEF(), makeTree(), makeTree(), makeTree());     
        }
    }
}

/*program2str2program(prog : Program, testTitle : string, filename : string) -> Program{
    println("annotProgram2file2annotProgram " + testTitle);
    println("annotProg2s(AnnotNeMoProg : AnnotProgram)");
    progStr = annotProg2s(prog);
    println(progStr);
    println("");
    putCode("./tests/testsOut/" + "annotProgram2str_" + filename, progStr);
    println("");
    parseAnnotNemoProgram(progStr, testTitle);
}*/

launchAnnotNemoTest(filename : string) -> AnnotProgram{
    fileIn = "./tests/testsIn/" + filename;
    testCode = getCode(fileIn);
    annotNemoProg = parseAnnotNemoProgram(testCode, "string -> AnnotNemo");
    if(annotNemoProg != AnnotProgram(Program([],Print(IntExpr(0))),FalseEF(), FalseEF(), makeTree(), makeTree(), makeTree())){
        println("annotProg2s(AnnotNeMoProg : AnnotProgram)");
        progStr = annotProg2s(annotNemoProg);
        println(progStr);
        println("");
        putCode("./tests/testsOut/" + "annotProgram2str_" + filename, progStr);
        println("");
        /*progFromStrFromProg = program2str2program(nemoProg, "AnnotNemo -> string -> AnnotNemo", filename);
        if(nemoProg == progFromStrFromProg) {
            println("Seccessful: AnnotNemo -> string -> AnnotNemo");
        } else {
            println("Error: AnnotNemo -> string -> AnnotNemo");
        }*/
    }
    println("");
    annotNemoProg;
}

main(){
    sqrt = launchAnnotNemoTest("sqrt.anemo");
}